version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: community-dashboard-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_PATH=/app/data/database.sqlite
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./data:/app/data
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - community-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - database-init

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: community-dashboard-frontend
    ports:
      - "3000:80"
    environment:
      - API_BASE_URL=http://localhost:3001/api
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
    restart: unless-stopped
    networks:
      - community-network
    depends_on:
      - backend

  # Database Initialization Service
  database-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: community-dashboard-db-init
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/data/database.sqlite
    volumes:
      - ./data:/app/data
      - ./backend:/app
      - /app/node_modules
    command: ["node", "scripts/initDatabase.js"]
    networks:
      - community-network
    restart: "no"

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: community-dashboard-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    networks:
      - community-network
    depends_on:
      - frontend
      - backend
    profiles:
      - production

networks:
  community-network:
    driver: bridge
    name: community-dashboard-network

volumes:
  database-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data